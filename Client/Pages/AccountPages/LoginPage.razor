@page "/identity/account/login"

@layout AuthenticationLayout
<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            <EditForm Enchance Model="User" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator/>
                <div class="card bg-dark d-flex justify-content-center" style="margin-top:50%; border-radius:10px;color:white;font-weight:bold">
                    <div class="card-header text-center fs-5 mb-2">Login</div>
                    <div class="container">
                        <div class="row" style="border-radius:20px">
                            <div class="col-lg-4 col-md-4 col-sm4"></div>
                            <div class="col-lg-4 col-md-4 col-sm4 d-flex justify-content-center"></div>
                            <div class="col-lg-4 col-md-4 col-sm4"></div>
                        </div>

                    </div>
                    <div class="card-body">
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="User.Email" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <input type="password" @bind="User.Password" class="form-control" />

                        </div>
                <div class="form-group mt-3">
                                                @if(ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Login</button>
                            }
                </div>
                </div>
                <div class="card-footer">
                    <span class="text-center">
                        Don't have account? |
                        <a class="btn-link" href="identity/account/register">Sign up</a>
                    </span>
                    <ValidationSummary/>
                </div>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-4"></div>
    </div>
</div>

@code 
{
    public bool ShowLoadingButton { get; set; } = false;
    Login User = new();


    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleLogin()
    {
        ShowLoadingButton = true;
        var result = await accountService.SignInAsync(User);
        if(result.Flag)
        {
            await DisplayDialog(result.Message, "Login Success");
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession() { Token = result.Token, RefreshToken = result.RefreshToken });
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            await DisplayDialog(result.Message, "Alert");
            ShowLoadingButton = false;
        }


    }

    private async Task DisplayDialog(string content, string title)
    {
        await dialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }


}